{"version":3,"sources":["video/mars.mp4","pages/login.js","pages/menu.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","cookies","Cookies","Menu","Component","App","Video","className","autoPlay","loop","muted","style","position","width","height","left","top","objectFit","transform","zIndex","src","Mars","type","Time","useState","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,G,MAAA,IAA0B,kC,kICUnCA,EAAQ,sCACRC,EAAU,IAAIC,ICELC,GDDKC,Y,4JCRhB,WACI,OACI,qD,GAHOA,c,eC8IJC,MAvIf,WAIA,SAASC,IACP,OACF,qBAAKC,UAAU,SAAf,SACE,uBACCC,UAAQ,EACRC,MAAI,EACJC,OAAK,EAACC,MAAQ,CAEZC,SAAU,WACVC,MAAO,QACPC,OAAQ,QACRC,KAAM,MACNC,IAAK,MAGLC,UAAW,QACXC,UAAW,uBACXC,OAAO,MAdV,SAmBA,wBAAQC,IAAKC,EAAMC,KAAK,kBAYxB,SAASC,IACT,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEIC,EAAWC,mBAmCb,OANFC,qBAAU,WAER,OA7BiB,WACjB,IAAMC,EAAgB,IAAIC,KAAK,yBAAyBC,UACxDL,EAAWM,aAAY,WACrB,IAAMC,GAAM,IAAIH,MAAOC,UACjBG,EAAWL,EAAgBI,EAE3BE,EAAOC,KAAKC,MAAOH,EAAQ,OAC3BI,EAAQF,KAAKC,MAAQH,EAAQ,MAAR,MACrBK,EAAUH,KAAKC,MAAQH,EAAQ,KAAV,KACrBM,EAAUJ,KAAKC,MAAQH,EAAQ,IAAkB,KAGpDA,EAAS,EAEVO,cAAcf,EAASgB,UAEvBvB,EAAagB,GACbd,EAAciB,GACdf,EAAgBgB,GAChBd,EAAgBe,MAGjB,KAMHG,GACM,WACJF,cAAcf,EAASgB,aAKvB,yBAAS1C,UAAW,QAApB,SACA,oCACE,8BACE,sBAAMA,UAAW,wCAEnB,gCACE,oCACE,4BAAIkB,IACJ,4BAAG,8CAGL,qCACA,oCACA,4BAAIE,IACF,4BAAG,+CAEL,qCACA,oCACA,4BAAIE,IACF,4BAAG,iDAEL,qCACA,oCACA,4BAAIE,IACF,4BAAG,yDAWX,OACE,eAAC,IAAD,WACA,cAACR,EAAD,IACA,cAAC,IAAD,UAGA,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAM,QAAQC,UAAYlD,MAGvC,cAACG,EAAD,QC3HSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf290547.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mars.196840f2.mp4\";","import React, {Component} from \"react\";\r\n\r\nimport { Form, } from \"react-bootstrap\";\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport md5 from 'md5';\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nconst baseUrl=\"http://localhost:3001/contraseña\";\r\nconst cookies = new Cookies();\r\nclass Login extends Component {\r\n\r\n    state={\r\n        form:{\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange= async e=>{\r\n        await this.setState({\r\n            form:{\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n   iniciarSesion=async()=>{\r\n    await axios.get(baseUrl, {params:{password: md5(this.state.form.password)}})\r\n    .then(response=>{\r\n        return response.data;\r\n    })\r\n    .then(response=>{\r\n        if(response.length>0){\r\n            var respuesta= response[0];\r\n            cookies.set('id', respuesta.id, {path:\"/\"});\r\n            alert('Correcto');\r\n            window.location.href=\"./menu\";\r\n        }else{\r\n            alert('error')\r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error);\r\n    })\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"contenidocodigo\" >\r\n      <div className=\"contraseña\">\r\n   <input type= \"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange}/>\r\n   </div>\r\n   <Form>\r\n   \r\n   \r\n     \r\n\r\n      <div id=\"bn\">\r\n      <button variant=\"outline-warning\" onClick={()=> this.iniciarSesion()}\r\n       >\r\n    ENTRAR\r\n  </button>\r\n  </div>\r\n      </Form>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from \"react\";\r\n\r\n\r\nclass Menu extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Menu principal\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport './App.css';\n//import Inicio from './inicio';\nimport Mars from './video/mars.mp4';\nimport  Login from \"./pages/login\";\nimport Menu from './pages/menu';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  \n  \n  \nfunction Video() {\n  return(\n<div className=\"planet\">\n  <video\n   autoPlay\n   loop\n   muted style= {{\n     \n     position: \"absolute\",\n     width: \"400px\",\n     height: \"400px\",\n     left: \"50%\",\n     top: \"50%\",\n     \n     \n     objectFit: \"cover\",\n     transform: \"translate(-50%,-50%)\",\n     zIndex:\"-1\",\n     \n   }}>\n\n\n  <source src={Mars} type=\"video/mp4\"/>\n</video>\n</div>\n  )\n  \n}\n  \n\n\n  \n  \n\n  function Time(){\n  const [timerDays, setTimerDays] = useState('00');\n  const [timerHours, setTimerHours] = useState('00');\n  const [timerMinutes, setTimerMinutes] = useState('00');\n  const [timerSeconds, setTimerSeconds] = useState('00');\n\n  let interval = useRef();\n\n  const startTimer = () => {\n    const countdownDate = new Date('Oct 29, 2021 00:00:00').getTime();\n    interval = setInterval(()=> {\n      const now = new Date().getTime();\n      const distance = countdownDate - now;\n\n      const days = Math.floor( distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(( distance % (1000 * 60 * 60 * 24) / (1000*60*60)));\n      const minutes = Math.floor(( distance % (1000 * 60 * 60 ))/(1000 *60));\n      const seconds = Math.floor(( distance % (1000 * 60 ))/ 1000);\n\n\n      if(distance<0){\n        //para el tiempo\n        clearInterval(interval.current);\n      }else {\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n\n    }, 1000);\n  };\n\n\n  //component\n  useEffect(()=> {\n    startTimer();\n    return()=>{\n      clearInterval(interval.current);\n    };\n  })\n    return(\n     \n      <section className= \"timer\">\n      <section>\n        <div>\n          <span className= \"mdi mdi-calendar-clock timer-icon\"></span>\n        </div>\n        <div>\n          <section>\n            <p>{timerDays}</p>\n            <p><small>Days</small></p>\n\n          </section>\n          <span>:</span>\n          <section>\n          <p>{timerHours}</p>\n            <p><small>Hours</small></p>\n          </section>\n          <span>:</span>\n          <section>\n          <p>{timerMinutes}</p>\n            <p><small>minutes</small></p>\n          </section>\n          <span>:</span>\n          <section>\n          <p>{timerSeconds}</p>\n            <p><small>seconds</small></p>\n          </section>\n        </div>\n      </section>\n\n      </section>\n    \n    )\n\n    }\n\n    return (\n      <BrowserRouter>\n      <Time/>\n      <Switch>\n      \n     \n      <Route exact path= \"/menu\" component= {Menu}/>\n      \n      </Switch>\n      <Video/>\n      </BrowserRouter>\n    )\n    }\n\n \n    \n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}